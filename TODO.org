This is list a of rough ideas.  Feel free to contribute your own, ask/answer
questions and point out issues.

* commands

** TODO Show number of selected torrents/files
    The best place would probably in the bottom bar.  Either implement that in
    tui.infobar.TorrentCountersWidget or create a new widget.

    Another place could be the column header for the 'marked' column.  With no
    torrents marked, show 'tui.marked.on', otherwise the number of marked
    torrents.  But that would widen the column to at least 3 characters.

** TODO New command: sort
   Sort torrents or peers in the focused list.  Check if tab actually contains
   a sortable list and not something like a help page.

** TODO New command: interactive
   Take an arbitrary amount of (option, prompt) pairs and any command.  The
   command contains placeholders.  First, for each (option, prompt) pair, the
   user has to supply a value.  Each placeholder is then replaced with its
   value and the command is executed if all placeholders are filled.

   Example: interactive dest:Destination -- mv {dest}

   This is mostly useful for better keybindings in the TUI, but it may also
   have benefits on the CLI.

** TODO add: --path,-p option
   The newly added torrent is downloaded to the specified path.

** TODO New command: rate
   Usage: rate up|down <RATE> [<TORRENT FILTER>]

   First, implement a new async method that sets the up/down rates of individual
   torrents in client.aiotransmission.api_torrent.  Use client.convert.bandwidth
   to parse numbers with units and unit prefixes correctly (e.g. '1kB').  See
   client.aiotransmission.api_settings.*rate_limit* for inspiration.

   If TORRENT FILTER is not given, simply set the setting
   'srv.limit.rate.up/down' to RATE.


* tui.logger

** TODO Make log widget scrollable
   How to scroll?  Do we need a command for that, like ~scrollog
   up/down/pgup/pgdown~?  Is there a better way?


* client

** TODO Better moving average for peer download rate estimation
   Maybe this one?
   https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average

** TODO NotImplementedError
   The classes exported by `client` should derive from base classes that raise
   NotImplementedError in all undefined methods and properties.

*** TODO NotImplementedError callbacks
    Figure out how to avoid tons of ~try: ... except NotImplementedError as e:
    log.error(e)~.  Maybe with a callback somewhere?


* tui.tabs

** TODO The rightmost tab is hidden unless it fits completely
   If enough tabs are open so that they don't fit in the tab bar anymore, the
   rightmost one is completely removed from the list even if it fits almost.
   That looks like there are no more tabs on the right.

** TODO New tab not always rendered
   If no tab exists and a new one is created, it isn't rendered until
   something else happens, like opening the command prompt.


#+STARTUP: showeverything
#+OPTIONS: toc:nil num:nil H:10
